=head1 DESCRIPTION

I wrote this package to solve an issue with Visual Expert: it is unable to parse PBNI extensions because they doesn't content any code, as a result these extensions are not referenced in analyses at all.

So this package will parse the PBX description and generate an empty wrapper for userobjects and global functions, then it is possible to import them in a separate PBL and just append this last one in the Visual Expert project (not in your Powerbuilder target !). 

The last step is to regenerate VE analyse and it will take the famous PBNI objects and functions in account.

=head1 GETTING STARTED

Install the project dependencies:

 $ cpanp i Encode
 $ cpanp i File::Slurp
 $ cpanp i Win32::API

One liner usages:

 $ perl -MPBX=pbnihash.pbx
PbniHash.pbx
export uo_hash.sru

Same with a filename pattern:

 $ perl -MPBX=pbni*.pbx 

In a script:

 use PBX;
 my $pbx = new PBX( 'pbnihash.pbx' );
 $pbx->export;

=head1 TODO

Add to the C<export> method a path agument to specify output folder.

Add a C<addtolibrary> method to import generated sources in a PBL (via Powerbuilder::ORCA or an orca script).

=head1 LICENSE

See LICENSE file.